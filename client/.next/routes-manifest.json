{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/anamnese-digital/[id]",
      "regex": "^/anamnese\\-digital/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/anamnese\\-digital/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/manual-marca/[id]",
      "regex": "^/manual\\-marca/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/manual\\-marca/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/manual-marca/[id]/editar",
      "regex": "^/manual\\-marca/([^/]+?)/editar(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/manual\\-marca/(?<nxtPid>[^/]+?)/editar(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/anamnese-digital",
      "regex": "^/anamnese\\-digital(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/anamnese\\-digital(?:/)?$"
    },
    {
      "page": "/auth/callback",
      "regex": "^/auth/callback(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/callback(?:/)?$"
    },
    {
      "page": "/cadastro",
      "regex": "^/cadastro(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/cadastro(?:/)?$"
    },
    {
      "page": "/calendario",
      "regex": "^/calendario(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calendario(?:/)?$"
    },
    {
      "page": "/campanhas",
      "regex": "^/campanhas(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/campanhas(?:/)?$"
    },
    {
      "page": "/configuracoes",
      "regex": "^/configuracoes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/configuracoes(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/dashboard-v2",
      "regex": "^/dashboard\\-v2(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard\\-v2(?:/)?$"
    },
    {
      "page": "/demo/compliance",
      "regex": "^/demo/compliance(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/demo/compliance(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/landing-pages",
      "regex": "^/landing\\-pages(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/landing\\-pages(?:/)?$"
    },
    {
      "page": "/leads",
      "regex": "^/leads(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/leads(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/manual-marca",
      "regex": "^/manual\\-marca(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/manual\\-marca(?:/)?$"
    },
    {
      "page": "/mock-test",
      "regex": "^/mock\\-test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/mock\\-test(?:/)?$"
    },
    {
      "page": "/test-logo",
      "regex": "^/test\\-logo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-logo(?:/)?$"
    },
    {
      "page": "/test-upload",
      "regex": "^/test\\-upload(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-upload(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}